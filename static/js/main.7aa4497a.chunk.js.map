{"version":3,"sources":["redux/data/dataAction.js","redux/data/dataReducer.js","App.js","redux/rootRaducer.js","redux/nameSpace.js","index.js"],"names":["ActionTypeData","ActionCreatorData","commets","type","payload","comment","initialState","comments","OperationData","loadComments","dispatch","getState","api","firebase","database","ref","once","then","snapshot","val","response","postComments","lengthComments","DATA","dataBase","refComments","autiId","push","key","child","set","id","name","WrapperApp","connect","state","onChangeCommentPlace","onSubmitReview","commentsValues","Object","values","className","map","commentChat","action","method","disabled","onSubmit","evt","preventDefault","placeholder","onChange","target","value","required","rootReducer","combineReducers","assign","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","querySelector","init"],"mappings":"4QAAaA,G,YACG,iBADHA,EAEU,uBAGVC,EACE,SAACC,GACZ,MAAO,CACLC,KAAMH,EACNI,QAASF,IAJFD,EAQe,SAACI,GAAD,MAAc,CACtCF,KAAMH,EACNI,QAASC,ICZPC,EAAe,CACnBC,SAAU,GACVF,QAAQ,IAGGG,EAAgB,CAE3BC,aAAc,kBAAM,SAACC,EAAUC,EAAUC,GACtBC,IAASC,WACGC,IAAI,YAErBC,KAAK,SAChBC,MAAK,SAACC,GACL,OAAOA,EAASC,SAEjBF,MAAK,SAACG,GACLV,EAAST,EAA8BmB,SAI3CC,aAAc,SAAChB,GAAD,OAAa,SAACK,EAAUC,EAAUC,GAC9C,IAAMU,EAAiBX,IAAWY,KAAKhB,SAEjCiB,EAAWX,IAASC,WACpBW,EAAcD,EAAST,IAAI,YAC3BW,EAASD,EAAYE,OAAOC,KAEY,OAAnBN,EAA0BG,EAAYI,MAAMH,GAAUF,EAAST,IAAI,aAAeW,IAE1FI,IAAI,CACrBzB,QAASA,EACT0B,GAAI,EACJC,KAAM,SAEPf,MAAK,SAACG,GACLV,EAASF,EAAcC,sBCqChBwB,EAAaC,aAhBF,SAACC,GAAD,MAAY,CAClC5B,SAAU4B,EAAMZ,KAAKhB,SACrBF,QAAS8B,EAAMZ,KAAKlB,YAGK,SAACK,GAAD,MAAe,CAExC0B,qBAFwC,SAEnB/B,GACnBK,EAAST,EAA2CI,KAGtDgC,eANwC,SAMzBhC,GACbK,EAASF,EAAca,aAAahB,QAId6B,EAnEP,SAAC,GAAgE,IAA/D3B,EAA8D,EAA9DA,SAAUF,EAAoD,EAApDA,QAAS+B,EAA2C,EAA3CA,qBAAsBC,EAAqB,EAArBA,eACxDC,EAAiB,GAKrB,OAHgB,OAAb/B,IACD+B,EAAiBC,OAAOC,OAAOjC,IAG/B,yBAAKkC,UAAU,OAEZH,EAAeI,KAAI,SAACC,EAAaZ,GAChC,OACE,uBAAGH,IAAKe,EAAYtC,QAAU0B,GAAKY,EAAYtC,YAInD,0BACEoC,UAAU,gBACVG,OAAO,IACPC,OAAO,OACPC,SAAS,WACTC,SAAU,SAACC,GACTA,EAAIC,iBACJZ,EAAehC,KAKjB,8BACEoC,UAAU,oBACVV,GAAG,SACHC,KAAK,SACLkB,YAAY,MACZC,SAAU,SAACH,GACTZ,EAAqBY,EAAII,OAAOC,QAElCC,UAAQ,IAIZ,4BACEb,UAAU,kBACVtC,KAAK,UAFP,e,QC3COoD,EAAcC,YAAgB,eCHpC,QH2CoB,WAAmC,IAAlCrB,EAAiC,uDAAzB7B,EAAcsC,EAAW,uCAC3D,OAAQA,EAAOzC,MAEb,KAAKH,EACH,OAAOuC,OAAOkB,OAAO,GAAItB,EAAO,CAC9B5B,SAAUqC,EAAOxC,UAGrB,KAAKJ,EACH,OAAOuC,OAAOkB,OAAO,GAAItB,EAAO,CAC9B9B,QAASuC,EAAOxC,UAItB,OAAO+B,MIlCTtB,IAAS6C,cAVc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,+CAKE,WAEX,IAAMC,EAAQC,YACZZ,EACAa,YAAgBC,MAGlBH,EAAMxD,SAASF,EAAcC,gBAE7B6D,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAACjC,EAAD,OAEFuC,SAASC,cAAT,UAIJC,K","file":"static/js/main.7aa4497a.chunk.js","sourcesContent":["export const ActionTypeData = {\r\n  GET_COMMENTAS: `GET_COMMENTAS`,\r\n  CHANGE_COMMENT_PLACE: `CHANGE_COMMENT_PLACE`,\r\n};\r\n\r\nexport const ActionCreatorData = {\r\n  getComments: (commets) => {\r\n    return {\r\n      type: ActionTypeData.GET_COMMENTAS,\r\n      payload: commets,\r\n    };\r\n  },\r\n\r\n  actionChangeCommentPlace: (comment) => ({\r\n    type: ActionTypeData.CHANGE_COMMENT_PLACE,\r\n    payload: comment,\r\n  }),\r\n};","import {ActionCreatorData, ActionTypeData} from './dataAction.js';\r\nimport firebase from 'firebase';\r\n\r\nconst initialState = {\r\n  comments: {},\r\n  comment: ``,\r\n};\r\n\r\nexport const OperationData = {\r\n\r\n  loadComments: () => (dispatch, getState, api) => {\r\n    const dataBase = firebase.database();\r\n    const refComments = dataBase.ref('comments');\r\n\r\n    refComments.once('value')\r\n    .then((snapshot) => {\r\n      return snapshot.val();\r\n    })\r\n    .then((response) => {\r\n      dispatch(ActionCreatorData.getComments(response));\r\n    });\r\n  },\r\n\r\n  postComments: (comment) => (dispatch, getState, api) => {\r\n    const lengthComments = getState().DATA.comments;\r\n\r\n    const dataBase = firebase.database()\r\n    const refComments = dataBase.ref('comments');\r\n    const autiId = refComments.push().key;\r\n\r\n    const refOparationChange = lengthComments !== null ? refComments.child(autiId) : dataBase.ref('/comments/' + autiId);\r\n\r\n    refOparationChange.set({\r\n      comment: comment,\r\n      id: 1,\r\n      name: 'Alex',\r\n    })\r\n    .then((response) => {\r\n      dispatch(OperationData.loadComments());\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ActionTypeData.GET_COMMENTAS:\r\n      return Object.assign({}, state, {\r\n        comments: action.payload,\r\n      });\r\n\r\n    case ActionTypeData.CHANGE_COMMENT_PLACE:\r\n      return Object.assign({}, state, {\r\n        comment: action.payload,\r\n      });\r\n  }\r\n\r\n  return state;\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport firebase from 'firebase';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {ActionCreatorData} from './redux/data/dataAction.js';\r\nimport {OperationData} from './redux/data/dataReducer.js';\r\n\r\nexport const App = ({comments, comment, onChangeCommentPlace, onSubmitReview})  => {\r\n  let commentsValues = [];\r\n\r\n  if(comments !== null) {\r\n    commentsValues = Object.values(comments); \r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {commentsValues.map((commentChat, id) => {\r\n        return (\r\n          <p key={commentChat.comment + id}>{commentChat.comment}</p>\r\n        )\r\n      })}\r\n\r\n      <form \r\n        className=\"reviews__form\"\r\n        action=\"#\"\r\n        method=\"post\"\r\n        disabled=\"disabled\"\r\n        onSubmit={(evt) => {\r\n          evt.preventDefault();\r\n          onSubmitReview(comment);\r\n        }}\r\n\r\n      >\r\n\r\n        <textarea\r\n          className=\"reviews__textarea\"\r\n          id=\"review\"\r\n          name=\"review\"\r\n          placeholder=\"Add\"\r\n          onChange={(evt) => {\r\n            onChangeCommentPlace(evt.target.value);\r\n          }}\r\n          required\r\n      >\r\n      </textarea>\r\n\r\n      <button\r\n        className=\"reviews__submit\"\r\n        type=\"submit\"\r\n      >\r\n        Submit\r\n      </button>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  comments: state.DATA.comments,\r\n  comment: state.DATA.comment,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  onChangeCommentPlace(comment) {\r\n    dispatch(ActionCreatorData.actionChangeCommentPlace(comment));\r\n  },\r\n\r\n  onSubmitReview(comment) {\r\n    dispatch(OperationData.postComments(comment));\r\n  },\r\n});\r\n\r\nexport const WrapperApp = connect(mapStateToProps, mapDispatchToProps)(App);","import {combineReducers} from 'redux';\r\nimport {dataReducer} from './data/dataReducer.js';\r\nimport {NameSpace} from \"./nameSpace.js\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  [NameSpace.DATA]: dataReducer,\r\n});","export const NameSpace = {\r\n  DATA: `DATA`,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport firebase from 'firebase';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\n\r\nimport {WrapperApp} from './App';\r\n\r\nimport {rootReducer} from './redux/rootRaducer.js';\r\nimport {OperationData} from './redux/data/dataReducer.js';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB-Qj5y11gismV4eZbaubJL9B1CDTFI9-s\",\r\n    authDomain: \"web-chat-1b38f.firebaseapp.com\",\r\n    databaseURL: \"https://web-chat-1b38f.firebaseio.com\",\r\n    projectId: \"web-chat-1b38f\",\r\n    storageBucket: \"web-chat-1b38f.appspot.com\",\r\n    messagingSenderId: \"340398160492\",\r\n    appId: \"1:340398160492:web:62abd80b5f0a424c787649\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst init = () => {\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n    );\r\n\r\n  store.dispatch(OperationData.loadComments());\r\n\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <WrapperApp />\r\n    </Provider>,\r\n    document.querySelector(`#root`)\r\n  );\r\n};\r\n\r\ninit();\r\n"],"sourceRoot":""}