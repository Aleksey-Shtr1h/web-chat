{"version":3,"sources":["redux/data/dataAction.js","redux/data/dataReducer.js","App.js","redux/rootRaducer.js","redux/nameSpace.js","index.js"],"names":["ActionTypeData","ActionCreatorData","commets","type","payload","comment","initialState","comments","OperationData","loadComments","dispatch","getState","api","firebase","database","ref","once","then","snapshot","val","response","postComments","lengthComments","DATA","dataBase","refComments","autiId","push","key","child","set","id","name","WrapperApp","connect","state","onChangeCommentPlace","onSubmitReview","useState","com","setCom","commentsValues","console","log","Object","values","useEffect","setTimeout","className","map","commentChat","action","method","disabled","onSubmit","evt","preventDefault","placeholder","onChange","target","value","required","rootReducer","combineReducers","assign","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","querySelector","init"],"mappings":"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","file":"static/js/main.8a56c042.chunk.js","sourcesContent":["export const ActionTypeData = {\r\n  GET_COMMENTAS: `GET_COMMENTAS`,\r\n  CHANGE_COMMENT_PLACE: `CHANGE_COMMENT_PLACE`,\r\n};\r\n\r\nexport const ActionCreatorData = {\r\n  getComments: (commets) => {\r\n    return {\r\n      type: ActionTypeData.GET_COMMENTAS,\r\n      payload: commets,\r\n    };\r\n  },\r\n\r\n  actionChangeCommentPlace: (comment) => ({\r\n    type: ActionTypeData.CHANGE_COMMENT_PLACE,\r\n    payload: comment,\r\n  }),\r\n};","import {ActionCreatorData, ActionTypeData} from './dataAction.js';\r\nimport firebase from 'firebase';\r\n\r\nconst initialState = {\r\n  comments: {},\r\n  comment: ``,\r\n};\r\n\r\nexport const OperationData = {\r\n\r\n  loadComments: () => (dispatch, getState, api) => {\r\n    const dataBase = firebase.database();\r\n    const refComments = dataBase.ref('comments');\r\n\r\n    refComments.once('value')\r\n    .then((snapshot) => {\r\n      return snapshot.val();\r\n    })\r\n    .then((response) => {\r\n      dispatch(ActionCreatorData.getComments(response));\r\n    });\r\n  },\r\n\r\n  postComments: (comment) => (dispatch, getState, api) => {\r\n    const lengthComments = getState().DATA.comments;\r\n\r\n    const dataBase = firebase.database()\r\n    const refComments = dataBase.ref('comments');\r\n    const autiId = refComments.push().key;\r\n\r\n    const refOparationChange = lengthComments !== null ? refComments.child(autiId) : dataBase.ref('/comments/' + autiId);\r\n\r\n    refOparationChange.set({\r\n      comment: comment,\r\n      id: 1,\r\n      name: 'Alex',\r\n    })\r\n    .then((response) => {\r\n      dispatch(OperationData.loadComments());\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ActionTypeData.GET_COMMENTAS:\r\n      return Object.assign({}, state, {\r\n        comments: action.payload,\r\n      });\r\n\r\n    case ActionTypeData.CHANGE_COMMENT_PLACE:\r\n      return Object.assign({}, state, {\r\n        comment: action.payload,\r\n      });\r\n  }\r\n\r\n  return state;\r\n};","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport firebase from 'firebase';\nimport {connect} from 'react-redux';\n\nimport {ActionCreatorData} from './redux/data/dataAction.js';\nimport {OperationData} from './redux/data/dataReducer.js';\n\nexport const App = ({comments, comment, onChangeCommentPlace, onSubmitReview})  => {\n  const [com, setCom] = useState(null)\n  let commentsValues = [];\n  console.log(com);\n\n  if(com !== null) {\n    commentsValues = Object.values(com); \n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      const dataBase = firebase.database();\n      const refComments = dataBase.ref('comments');\n\n      refComments.once('value')\n      .then((snapshot) => {\n        if (com !== snapshot.val()) {\n          setCom(snapshot.val());  \n        }\n      });\n    }, 2000);\n  }, [com])\n\n  return (\n    <div className=\"App\">\n\n      {commentsValues.map((commentChat, id) => {\n        return (\n          <p key={commentChat.comment + id}>{commentChat.comment}</p>\n        )\n      })}\n\n      <form \n        className=\"reviews__form\"\n        action=\"#\"\n        method=\"post\"\n        disabled=\"disabled\"\n        onSubmit={(evt) => {\n          evt.preventDefault();\n          onSubmitReview(comment);\n        }}\n\n      >\n\n        <textarea\n          className=\"reviews__textarea\"\n          id=\"review\"\n          name=\"review\"\n          placeholder=\"Add\"\n          onChange={(evt) => {\n            onChangeCommentPlace(evt.target.value);\n          }}\n          required\n      >\n      </textarea>\n\n      <button\n        className=\"reviews__submit\"\n        type=\"submit\"\n      >\n        Submit\n      </button>\n\n      </form>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  comments: state.DATA.comments,\n  comment: state.DATA.comment,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  onChangeCommentPlace(comment) {\n    dispatch(ActionCreatorData.actionChangeCommentPlace(comment));\n  },\n\n  onSubmitReview(comment) {\n    dispatch(OperationData.postComments(comment));\n  },\n});\n\nexport const WrapperApp = connect(mapStateToProps, mapDispatchToProps)(App);","import {combineReducers} from 'redux';\r\nimport {dataReducer} from './data/dataReducer.js';\r\nimport {NameSpace} from \"./nameSpace.js\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  [NameSpace.DATA]: dataReducer,\r\n});","export const NameSpace = {\r\n  DATA: `DATA`,\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\n\nimport {WrapperApp} from './App';\n\nimport {rootReducer} from './redux/rootRaducer.js';\nimport {OperationData} from './redux/data/dataReducer.js';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB-Qj5y11gismV4eZbaubJL9B1CDTFI9-s\",\n    authDomain: \"web-chat-1b38f.firebaseapp.com\",\n    databaseURL: \"https://web-chat-1b38f.firebaseio.com\",\n    projectId: \"web-chat-1b38f\",\n    storageBucket: \"web-chat-1b38f.appspot.com\",\n    messagingSenderId: \"340398160492\",\n    appId: \"1:340398160492:web:62abd80b5f0a424c787649\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nconst init = () => {\n\n  const store = createStore(\n    rootReducer,\n    applyMiddleware(thunk)\n    );\n\n  store.dispatch(OperationData.loadComments());\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <WrapperApp />\n    </Provider>,\n    document.querySelector(`#root`)\n  );\n};\n\ninit();\n"],"sourceRoot":""}