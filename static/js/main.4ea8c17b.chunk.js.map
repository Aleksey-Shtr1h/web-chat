{"version":3,"sources":["components/header/header.jsx","components/comments-list/comments-list.jsx","redux/data/dataAction.js","adapter/comment.js","redux/data/dataReducer.js","components/form-new-comment/form-new-comment.jsx","components/main-page/main-page.jsx","components/app/App.js","redux/rootRaducer.js","redux/nameSpace.js","index.js","utils/firebase.js"],"names":["Header","children","className","CommentsList","comments","useSelector","state","DATA","sort","prev","next","date","map","commentChat","id","key","description","ActionTypeData","ActionCreatorData","commets","type","payload","comment","adapterComment","commentsApi","commentApi","commentData","Date","nameUser","name","initialState","OperationData","dispatch","getState","api","firebase","firestore","collection","onSnapshot","snapshot","usersCommets","docs","newUsersComments","userCommet","data","dateNow","add","toISOString","FormNewComment","props","useDispatch","action","method","disabled","onSubmit","evt","preventDefault","value","onChange","target","required","MainPage","App","useEffect","useComments","rootReducer","combineReducers","Object","assign","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","querySelector","init"],"mappings":"2QAEaA,G,YAAS,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACtB,OACE,yBAAKC,UAAU,UACb,wBAAIA,UAAU,cAAd,YACCD,KCHME,EAAe,WAC1B,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,YAEnD,OACE,wBAAIF,UAAU,kBACXE,EACEI,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,KAAOD,EAAKC,QACtCC,KAAI,SAACC,EAAaC,GACnB,OACE,wBACEZ,UAAU,iBACVa,IAAKF,EAAYG,YAAcF,GAE9BD,EAAYG,kBChBZC,EACG,gBADHA,EAEU,uBAFVA,EAGQ,qBAGRC,EACE,SAACC,GACZ,MAAO,CACLC,KAAMH,EACNI,QAASF,IAJFD,EAQe,SAACI,GAAD,MAAc,CACtCF,KAAMH,EACNI,QAASC,IAVAJ,EAaa,iBAAO,CAC7BE,KAAMH,EACNI,QAAQ,K,QCZCE,EAAiB,SAACC,GAC7B,OAAOA,EAAYZ,KAAI,SAACa,GAAD,MAThB,CACLX,IAFmBY,EAUgCD,GARnCX,GAChBH,KAAM,IAAIgB,KAAKD,EAAYf,MAC3BK,YAAaU,EAAYV,YACzBY,SAAUF,EAAYG,MALJ,IAACH,MCKVI,EAAe,CAC1B1B,SAAU,GACVkB,QAAQ,IAGGS,EAEG,kBAAM,SAACC,EAAUC,EAAUC,GACtBC,IAASC,YACjBC,WAAT,YACCC,YAAW,SAACC,GACX,IAAMC,EAAeD,EAASE,KACxBC,EAAmBnB,EACzBiB,EAAa5B,KAAI,SAAC+B,GAAD,sBACZA,EAAWC,YAGhBZ,EAASd,EAA8BwB,SAZhCX,EAgBG,SAACf,GAAD,OAAiB,SAACgB,EAAUC,EAAUC,GAClD,IAAMW,EAAU,IAAIlB,KAEHQ,IAASC,YACGC,WAAT,YAERS,IAAI,CACd9B,cACAF,GAAI,EACJe,KAAM,OACNlB,KAAMkC,EAAQE,gBAGhBf,EAASd,OCjCA8B,EAAiB,SAAAC,GAC5B,IAAM3B,EAAUjB,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKe,WAE5CU,EAAWkB,cAEjB,OACE,0BACEhD,UAAU,iBACViD,OAAO,IACPC,OAAO,OACPC,SAAS,WACTC,SAAU,SAACC,GACTA,EAAIC,iBACJxB,EAASD,EAA2BT,MAItC,8BACEpB,UAAU,qBACVY,GAAG,SACHe,KAAK,SACL4B,MAAOnC,EACPoC,SAAU,SAACH,GACTvB,EAASd,EAA2CqC,EAAII,OAAOF,SAEjEG,UAAQ,IAIZ,4BACE1D,UAAU,mBACVkB,KAAK,UAFP,4DC9BSyC,EAAW,WAEtB,OACE,0BAAM3D,UAAU,QACd,kBAAC,EAAD,MACA,kBAAC,EAAD,QCMO4D,EAAM,WAGjB,OAVkB,WAClB,IAAM9B,EAAWkB,cACjBa,qBAAU,WACR/B,EAASD,OACR,IAIHiC,GAGE,yBAAK9D,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,S,QClBK+D,EAAcC,YAAgB,eCHpC,QL2CoB,WAAmC,IAAlC5D,EAAiC,uDAAzBwB,EAAcqB,EAAW,uCAC3D,OAAQA,EAAO/B,MAEb,KAAKH,EACH,OAAOkD,OAAOC,OAAO,GAAI9D,EAAO,CAC9BF,SAAU+C,EAAO9B,UAGrB,KAAKJ,EAKL,KAAKA,EACH,OAAOkD,OAAOC,OAAO,GAAI9D,EAAO,CAC9BgB,QAAS6B,EAAO9B,UAOtB,OAAOf,OMpDI,WCDX6B,IAASkC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CDOX,IAAMC,EAAQC,YACZb,EACAc,YAAgBC,MAGlBC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,cAAT,UAIJC,K","file":"static/js/main.4ea8c17b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = ({children}) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1 className=\"title-site\">Web-Chat</h1>\r\n      {children}\r\n    </div>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport const CommentsList = () => {\r\n  const comments = useSelector((state) => state.DATA.comments);\r\n\r\n  return (\r\n    <ul className=\"comments__list\">\r\n      {comments\r\n        .sort((prev, next) => prev.date - next.date)\r\n        .map((commentChat, id) => {\r\n        return (\r\n          <li \r\n            className=\"comments__item\"\r\n            key={commentChat.description + id}\r\n          >\r\n            {commentChat.description}\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n};","export const ActionTypeData = {\r\n  GET_COMMENTAS: `GET_COMMENTAS`,\r\n  CHANGE_COMMENT_PLACE: `CHANGE_COMMENT_PLACE`,\r\n  ERASE_COMMENT_FORM: `ERASE_COMMENT_FORM`,\r\n};\r\n\r\nexport const ActionCreatorData = {\r\n  getComments: (commets) => {\r\n    return {\r\n      type: ActionTypeData.GET_COMMENTAS,\r\n      payload: commets,\r\n    };\r\n  },\r\n\r\n  actionChangeCommentPlace: (comment) => ({\r\n    type: ActionTypeData.CHANGE_COMMENT_PLACE,\r\n    payload: comment,\r\n  }),\r\n\r\n  actionEraseCommentForm: () => ({\r\n    type: ActionTypeData.ERASE_COMMENT_FORM,\r\n    payload: ``,\r\n  }),\r\n};","const changeComment = (commentData) => {\r\n  return {\r\n    id: commentData.id,\r\n    date: new Date(commentData.date),\r\n    description: commentData.description,\r\n    nameUser: commentData.name,\r\n  };\r\n};\r\n\r\nexport const adapterComment = (commentsApi) => {\r\n  return commentsApi.map((commentApi) => changeComment(commentApi));\r\n};","import {ActionCreatorData, ActionTypeData} from './dataAction.js';\r\nimport firebase from 'firebase';\r\n\r\nimport {adapterComment} from '../../adapter/comment.js';\r\n\r\nexport const initialState = {\r\n  comments: [],\r\n  comment: ``,\r\n};\r\n\r\nexport const OperationData = {\r\n\r\n  loadComments: () => (dispatch, getState, api) => {\r\n    const dataBase = firebase.firestore();\r\n    dataBase.collection(`comments`)\r\n    .onSnapshot((snapshot) => {\r\n      const usersCommets = snapshot.docs;\r\n      const newUsersComments = adapterComment(\r\n      usersCommets.map((userCommet) => ({\r\n        ...userCommet.data(),\r\n      })));\r\n\r\n      dispatch(ActionCreatorData.getComments(newUsersComments));\r\n    })\r\n  },\r\n\r\n  postComments: (description) => (dispatch, getState, api) => {\r\n    const dateNow = new Date();\r\n\r\n    const dataBase = firebase.firestore()\r\n    const refComments = dataBase.collection(`comments`);\r\n\r\n    refComments.add({\r\n      description,\r\n      id: 1,\r\n      name: 'Alex',\r\n      date: dateNow.toISOString(),\r\n    });\r\n\r\n    dispatch(ActionCreatorData.actionEraseCommentForm());\r\n  }\r\n\r\n};\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ActionTypeData.GET_COMMENTAS:\r\n      return Object.assign({}, state, {\r\n        comments: action.payload,\r\n      });\r\n\r\n    case ActionTypeData.CHANGE_COMMENT_PLACE:\r\n      return Object.assign({}, state, {\r\n        comment: action.payload,\r\n      });\r\n\r\n    case ActionTypeData.ERASE_COMMENT_FORM:\r\n      return Object.assign({}, state, {\r\n        comment: action.payload,\r\n      });\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {ActionCreatorData} from '../../redux/data/dataAction.js';\r\nimport {OperationData} from '../../redux/data/dataReducer.js';\r\n\r\nexport const FormNewComment = props => {\r\n  const comment = useSelector((state) => state.DATA.comment);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <form \r\n      className=\"comments__form\"\r\n      action=\"#\"\r\n      method=\"post\"\r\n      disabled=\"disabled\"\r\n      onSubmit={(evt) => {\r\n        evt.preventDefault();\r\n        dispatch(OperationData.postComments(comment))\r\n      }}\r\n    >\r\n\r\n      <textarea\r\n        className=\"comments__textarea\"\r\n        id=\"review\"\r\n        name=\"review\"\r\n        value={comment}\r\n        onChange={(evt) => {\r\n          dispatch(ActionCreatorData.actionChangeCommentPlace(evt.target.value));\r\n        }}\r\n        required\r\n    >\r\n    </textarea>\r\n\r\n    <button\r\n      className=\"comments__submit\"\r\n      type=\"submit\"\r\n    >\r\n      Отправить\r\n    </button>\r\n\r\n    </form>\r\n  )\r\n};","import React from 'react';\r\n\r\nimport {CommentsList} from '../comments-list/comments-list.jsx';\r\nimport {FormNewComment} from '../form-new-comment/form-new-comment.jsx';\r\n\r\nexport const MainPage = () => {\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <CommentsList />\r\n      <FormNewComment />\r\n    </main>\r\n  )\r\n};","import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport './App.css';\r\n\r\nimport {Header} from '../header/header.jsx';\r\nimport {MainPage} from '../main-page/main-page.jsx';\r\n\r\nimport {OperationData} from '../../redux/data/dataReducer.js';\r\n\r\nconst useComments = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(OperationData.loadComments());\r\n  }, []);\r\n};\r\n\r\nexport const App = ()  => {\r\n  useComments();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header> \r\n        <MainPage />\r\n      </Header>\r\n\r\n    </div>\r\n  );\r\n};","import {combineReducers} from 'redux';\r\nimport {dataReducer} from './data/dataReducer.js';\r\nimport {NameSpace} from \"./nameSpace.js\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  [NameSpace.DATA]: dataReducer,\r\n});","export const NameSpace = {\r\n  DATA: `DATA`,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {initialFirebase} from './utils/firebase.js';\r\n// import firebase from 'firebase';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\n\r\nimport {App} from './components/app/App.js';\r\n\r\nimport {rootReducer} from './redux/rootRaducer.js';\r\n\r\nconst init = () => {\r\n  initialFirebase();\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.querySelector(`#root`)\r\n  );\r\n};\r\n\r\ninit();\r\n","import firebase from 'firebase';\r\n\r\nexport const initialFirebase = () => {\r\n  const firebaseConfig = {\r\n      apiKey: \"AIzaSyB-Qj5y11gismV4eZbaubJL9B1CDTFI9-s\",\r\n      authDomain: \"web-chat-1b38f.firebaseapp.com\",\r\n      databaseURL: \"https://web-chat-1b38f.firebaseio.com\",\r\n      projectId: \"web-chat-1b38f\",\r\n      storageBucket: \"web-chat-1b38f.appspot.com\",\r\n      messagingSenderId: \"340398160492\",\r\n      appId: \"1:340398160492:web:62abd80b5f0a424c787649\"\r\n    };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n}"],"sourceRoot":""}